{
    "version": "2.0.0",
    "inputs": [
        {
            "id": "buildType",
            "type": "pickString",
            "description": "Which build type do you want to use?",
            "options": [
                "Debug",
                "Release"
            ],
            "default": "Debug"
        }
    ],
    "tasks": [
        {
            "label": "Clean",
            "type": "shell",
            "command": "rm",
            "args": [
                "-rf",
                "${workspaceFolder}/build"
            ],
            "problemMatcher": []
        },
        {
            "label": "Create Build Folder",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/build"
            ],
            "problemMatcher": []
        },
        {
            "label": "Build",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd ${workspaceFolder}/build && cmake .. && cmake --build . --config ${input:buildType}"
            ],
            "dependsOn": "Create Build Folder",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Rebuild",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd ${workspaceFolder}/build && cmake .. && cmake --build . --config ${input:buildType} --clean-first"
            ],
            "dependsOn": "Create Build Folder",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Run ModernCPlusPlusDemo",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd ${workspaceFolder}/build && ./ModernCPlusPlusDemo"
            ],
            "dependsOn": "Build",
            "problemMatcher": []
        },
        {
            "label": "Run Google Tests",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "cd ${workspaceFolder}/build && ./gtest_unitTest"
            ],
            "dependsOn": "Build",
            "problemMatcher": []
        }
    ]
}
